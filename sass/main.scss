/* cross browser reset */

$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;  /* by setting box-sizing property on each and every element on the entire page to inherit will automatically inherit whatever we put in the border-box*/
    /*box-sizing: border-box;  border, padding are not added to the total width and total height specified for a box */
}

html {
   font-size: 62.5%;   /* bad practice to set font-size in pixels */
}

/*rems do not support below IE version 9*/

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, 
    rgba($color-primary-light, 0.8), 
    rgba($color-primary-dark, 0.8)), url(../img/hero.jpg);
    background-size: cover;  /* cover the entire container*/
    background-position: top; /* top of the container*/
    clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);  /* used for clipping*/
    position: relative; /* where top and left og logo box will be count */

    &__logo-box {   // same as header__logo-box
      position: absolute;
      top: 4rem;
      left: 4rem; 
    }

    &__logo {
      height: 3.5rem;
    }

    &__text-box {
        position: absolute;
        top: 40%; /* 50% from the parent. the starting point of the text box will be placed at 50% */
        left: 50%;
        transform: translate(-50%, -50%); /* once translate is used here, text box is not in the relation with the parent but is in the relation itself */
        text-align: center;
    }
}


.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    backface-visibility: hidden;
    &--main {
        display: block;  /* block level elements occupy the entire width available and create line breaks after and before them*/
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
        animation-name: moveInLeft;
        animation-duration: 1s;
        animation-timing-function: ease-out;
        /* animation-iteration-count: 3; */
    }
    
    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.75rem;
        /* animation-name: moveInRight;
        animation-duration: 1s; */
        animation: moveInRight 1s ease-out;
        margin-bottom: 6rem;
    }
}

// .heading-primary--main {
//     display: block;  /* block level elements occupy the entire width available and create line breaks after and before them*/
//     font-size: 6rem;
//     font-weight: 400;
//     letter-spacing: 3.5rem;
//     animation-name: moveInLeft;
//     animation-duration: 1s;
//     animation-timing-function: ease-out;
//     /* animation-iteration-count: 3; */
// }

// .heading-primary--sub {
//     display: block;
//     font-size: 2rem;
//     font-weight: 700;
//     letter-spacing: 1.75rem;
//     /* animation-name: moveInRight;
//     animation-duration: 1s; */
//     animation: moveInRight 1s ease-out;
//     margin-bottom: 6rem;
// }


@keyframes moveInLeft {

    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
    
}

@keyframes moveInRight {

    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
    
}

@keyframes bottomTop {
    0% {
        opacity: 0;
        transform: translateY(10rem);
    }
    100%{
        transform: translate(0);
    }
}

.btn{  /* pesudo class*/
    &:link, &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;  /*transition has to be on the initial state */
    position: relative;
    font-size: 1.6rem;
    }
    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 1rem 2rem rgba($color-black, .2);
      &::after {
        transform: scaleX(1.4) scaleY(1.6);
        opacity: 0;
    }
    } 
    &:active {
      transform: translateY(-1px);
      box-shadow: 0 .5rem 1rem rgba($color-black, .2);
    }
    &::after {
        content: ""; /* content and display are required properties */
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top:0;
        left: 0;
        z-index: -1;
        transition: all 0.4s;
    }
    // &:hover::after {
    //     transform: scaleX(1.4) scaleY(1.6);
    //     opacity: 0;
    // }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;
     &::after{
        background-color: $color-white;
     }
    }

    &--animated {
        animation: bottomTop 1s ease-out .75s;
        animation-fill-mode: backwards; /* it will apply style of 0% before the animation starts*/
    }
}

 
/* hover and active should be set after link and visited*/


/* animation-fill-mode CSS property sets how a CSS animation applies styles to its target before and after its execution. */